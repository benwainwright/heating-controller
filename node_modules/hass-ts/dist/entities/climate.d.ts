import { Client } from "../core";
import { ClimateState } from "../types/climate-state";
declare type StateChangeCallback = (oldState: ClimateState, newState: ClimateState) => void;
declare type SetTemperatureArgs = {
    temperature?: number;
    target_temp_high?: number;
    target_temp_low?: number;
    hvac_mode?: string;
};
export declare class Climate<I extends `climate.${string}`> {
    private id;
    private entity;
    private setHvacModeCommand;
    private setPresetModeCommand;
    private setAuxHeatCommand;
    private setTemperatureCommand;
    constructor(id: I, client: Client);
    setTemperature(args: SetTemperatureArgs): Promise<void>;
    setAuxHeat(auxHeat: string): Promise<void>;
    setHvacMode(mode: string): Promise<void>;
    setPresetMode(mode: string): Promise<void>;
    onStateChange(callback: StateChangeCallback): void;
}
export {};
